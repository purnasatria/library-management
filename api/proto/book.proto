syntax = "proto3";

package book;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "author.proto";

option go_package = "github.com/purnasatria/library-management/api/gen/book";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  security_definitions: {
    security: {
      key: "Bearer"
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "Authorization"
      }
    }
  }
  security: {
    security_requirement: {
      key: "Bearer"
      value: {}
    }
  }
};

service BookService {
  rpc CreateBook(CreateBookRequest) returns (BookResponse) {
    option (google.api.http) = {
      post: "/api/v1/books"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "Bearer"
          value: {}
        }
      }
    };
  }
  rpc GetBook(GetBookRequest) returns (BookResponse) {
    option (google.api.http) = {
      get: "/api/v1/books/{id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "Bearer"
          value: {}
        }
      }
    };
  }
  rpc UpdateBook(UpdateBookRequest) returns (BookResponse) {
    option (google.api.http) = {
      put: "/api/v1/books/{id}"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "Bearer"
          value: {}
        }
      }
    };
  }
  rpc DeleteBook(DeleteBookRequest) returns (DeleteBookResponse) {
    option (google.api.http) = {
      delete: "/api/v1/books/{id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "Bearer"
          value: {}
        }
      }
    };
  }
  rpc ListBooks(ListBooksRequest) returns (ListBooksResponse) {
    option (google.api.http) = {
      get: "/api/v1/books"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "Bearer"
          value: {}
        }
      }
    };
  }
  rpc BorrowBook(BorrowBookRequest) returns (BorrowBookResponse) {
    option (google.api.http) = {
      post: "/api/v1/books/{id}/borrow"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "Bearer"
          value: {}
        }
      }
    };
  }
  rpc ReturnBook(ReturnBookRequest) returns (ReturnBookResponse) {
    option (google.api.http) = {
      post: "/api/v1/books/{id}/return"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "Bearer"
          value: {}
        }
      }
    };
  }
  rpc GetBookRecommendations(GetBookRecommendationsRequest) returns (GetBookRecommendationsResponse) {
    option (google.api.http) = {
      get: "/api/v1/books/{id}/recommendations"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "Bearer"
          value: {}
        }
      }
    };
  }
}

message BookSummary {
  string id = 1;
  string title = 2;
  AuthorSummary author = 3;
  string isbn = 4;
  int32 publication_year = 5;
  string publisher = 6;
  int32 total_copies = 7;
  int32 available_copies = 8;
  repeated CategorySummary categories = 9;
  google.protobuf.Timestamp created_at = 10;
  google.protobuf.Timestamp updated_at = 11;
}

message Book {
  string id = 1;
  string title = 2;
  author.Author author = 3;
  string isbn = 4;
  int32 publication_year = 5;
  string publisher = 6;
  string description = 7;
  int32 total_copies = 8;
  int32 available_copies = 9;
  repeated CategorySummary categories = 10;
  google.protobuf.Timestamp created_at = 11;
  google.protobuf.Timestamp updated_at = 12;
}

message AuthorSummary {
  string id = 1;
  string name = 2;
}

message CategorySummary {
  string id = 1;
  string name = 2;
}

message CreateBookRequest {
  string title = 1;
  string author_id = 2;
  string isbn = 3;
  int32 publication_year = 4;
  string publisher = 5;
  string description = 6;
  int32 total_copies = 7;
  repeated string category_ids = 8;
}

message GetBookRequest {
  string id = 1;
}

message UpdateBookRequest {
  string id = 1;
  string title = 2;
  string author_id = 3;
  string isbn = 4;
  int32 publication_year = 5;
  string publisher = 6;
  string description = 7;
  int32 total_copies = 8;
  repeated string category_ids = 9;
}

message DeleteBookRequest {
  string id = 1;
}

message DeleteBookResponse {
  bool success = 1;
}

message ListBooksRequest {
  int32 page = 1;
  int32 page_size = 2;
  string title_query = 3;
  string author_query = 4;
  repeated string category_ids = 5;
  string isbn_query = 6;
  int32 publication_year_start = 7;
  int32 publication_year_end = 8;
  string publisher_query = 9;
  bool available_only = 10;
  enum SortBy {
    CREATED_AT = 0;
    TITLE = 1;
    AUTHOR = 2;
    PUBLICATION_YEAR = 3;
  }
  SortBy sort_by = 11;
  bool sort_desc = 12;
}

message ListBooksResponse {
  repeated BookSummary books = 1;
  int32 total = 2;
}

message BookResponse {
  Book book = 1;
}

message BorrowBookRequest {
  string id = 1;
  string user_id = 2;
}

message BorrowBookResponse {
  bool success = 1;
  string transaction_id = 2;
}

message ReturnBookRequest {
  string id = 1;
  string user_id = 2;
  string transaction_id = 3;
}

message ReturnBookResponse {
  bool success = 1;
}

message GetBookRecommendationsRequest {
  string id = 1;
  int32 limit = 2;
}

message GetBookRecommendationsResponse {
  repeated BookSummary recommendations = 1;
}
